<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Import Files</title>
    <style type="text/css">
        html
        {
            overflow-x: hidden;
            overflow-y: auto;
        }
        body
        {
            font-family: Arial, Helvetica,Sans-serif;
            color: black;
            background-color: #fff;
            font-size: 9pt;
            margin: 0px;
            padding: 1em;
            line-height: 1.5;
        }
        div
        {
            font-size: 1em;
			word-wrap:break-word;
        }
        table
        {
            empty-cells: show;
            margin: 0;
            padding: 0;
        }
        font
        {
            font-size: 1em;
        }
        ul
        {
            padding: 0 0 0 0;
        }
        ol
        {
            padding: 0 0 0 0;
        }
        li
        {
            line-height: 1.5em;
            padding: 0 0 0 0;
        }
        p
        {
            padding: 0;
        }
        h1, h2, h3, h4, h5
        {
            padding: 0;
        }
        h1
        {
            font-size: 1.3em; /*1.3em*/
        }
        h2
        {
            font-size: 1.1em; /*1.3em*/
        }
        h3
        {
            font-size: 1em;
            line-height:0.5em;
            white-space:nowrap;
            padding:0;
            font-weight:normal;
        }
        h4, h5, table
        {
            font-size: 1em;
        }
        sup, sub
        {
            font-size: .7em;
        }
        input, select, textarea, option
        {
            font-family: inherit;
            font-size: inherit;
            margin: 0;
            padding: 0;
        }
        img
        {
            border-style: none;
        }
        a
        {
            outline: none;
            color: #00c;
        }
        a:active
        {
            color: red;
        }
        a:visited
        {
            color: #551a8b;
        }
        hr
        {
            border: 0;
            background-color: #EEE;
            border-bottom: #c9d7f1 1px solid;
            height: 0px;
            width: 99.9%;
            text-align: left;
            margin-top: 1em;
            margin-top: 1em;
            margin-bottom: 1em;
        }
    </style>
</head>
<body>

    <script language="javascript">


        var WizExplorerApp = window.external;
        //
        var objApp = WizExplorerApp;
        var objWindow = objApp.Window;
        var objHtmlDocument = objWindow.CurrentDocumentHtmlDocument;
        //
        var pluginPath = objApp.GetPluginPathByScriptFileName("List.js");
        var languangeFileName = pluginPath + "plugin.ini";
        //
        var htmltext = "";

		get_problems();
		
		get_emphasized();
		
        //
        function gotoElem(pos) {
            objHtmlDocument.parentWindow.scrollTo(objHtmlDocument.body.offsetLeft, pos);
        }
		
		function get_problems() {
			htmltext += "<BR><B>Problem List</B><div  style='height:1px;background-color:#000000;line-height:1px;clear:both;display:block;overflow:hidden'></div>";
			var arrNote = objHtmlDocument.getElementsByTagName("DIV");
			var last_offsetTop = -1;
			for (var i = 0; i < arrNote.length; i++) {
				var elem = arrNote[i];
				
				if (elem.offsetTop == last_offsetTop) {
					continue;
				}
				last_offsetTop = elem.offsetTop;
				
				// 方法一：对于一个元素节点elem, 只考虑它的直接文本子节点, 其它不考虑，避免重复 ( 因为任何一段文本，总有它的直接父亲元素节点，不会遗漏) : 这种办法发现【已解决】三个字不是在文本节点出现
				// 方法二：删除子的DIV节点，再看是否满足条件
				var elemClone = elem.cloneNode(true);
				var subElems = elemClone.getElementsByTagName("DIV");
				while (subElems.length > 0) {
					elemClone.removeChild(subElems[0]);
					subElems = elemClone.getElementsByTagName("DIV");
				}
				//showDebugInfo(elemClone.innerText);

				var pStr = elemClone.innerText;
				if (have_problem(pStr)) {					
					htmltext += "<h3><a href=\"javascript:void(0);\" onclick=\"gotoElem('" + elem.offsetTop + "');\">" + pStr.substring(0, 30) + "</a></h3>";
					htmltext += elem.title + "</div>";
				}
			}
		}

		function showDebugInfo(infoString) { // for debuging
			var info = objHtmlDocument.createElement("p");
			info.innerText = "\nBegin-------------------------------------------------\n"
                    		+ infoString
							+ "\nEnd=======================================================\n";
			objHtmlDocument.body.appendChild(info);
		}
		
		function have_problem(line) {
		    if ( line.search(/^问题(：|:).*/) > -1 ) return true;  // 以"问题:"开头的行
			if ( line.search(/【问题/) > -1) return true;          // 包含 "【问题"
			if ( line.search(/【未解决】/) > -1) return true;          // 包含 "【未解决】"
			return false;
		}
		
		function get_emphasized() {
			htmltext += "<BR><B>Emphasized List</B><div  style='height:1px;background-color:#000000;line-height:1px;clear:both;display:block;overflow:hidden'></div>" ;
			var arrNote = objHtmlDocument.getElementsByTagName("DIV");
			for (var i = 0; i < arrNote.length; i++) {
				var elem = arrNote[i];
				var pStr = elem.innerText;
				if ( pStr.search(/^【.+】/)>-1 ) {
				htmltext += "<h3><a href=\"javascript:void(0);\" onclick=\"gotoElem('" + elem.offsetTop + "');\">" + elem.innerText + "</a></h3>";
				htmltext += elem.title + "</div>";
				}
			}
		}
		
		document.write(htmltext);
		
    </script>

</body>
</html>
